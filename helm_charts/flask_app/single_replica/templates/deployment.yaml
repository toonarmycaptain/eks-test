apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-test-flask
  labels:
    app: k8s-test-flask
  namespace: default
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: k8s-test-flask
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: k8s-test-flask
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
      - image: "{{ .Values.flask_app_image.repository }}:{{ .Values.flask_app_image.version }}"
        imagePullPolicy: {{ .Values.flask_app_image.pullPolicy }}
        name: k8s-test-flask
        ports:
        - containerPort: {{ .Values.flask_app_image.port }}
          protocol: TCP
          name: http
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: {{ .Values.flask_app_image.initialDelaySeconds }}
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: {{ .Values.flask_app_image.initialDelaySeconds }}
        volumeMounts:
          - name: k8s-test-storage-volume
            mountPath: "/mnt/data"
      volumes:
        - name: k8s-test-storage-volume
          persistentVolumeClaim:
            claimName:
              k8s-test-storage-claim